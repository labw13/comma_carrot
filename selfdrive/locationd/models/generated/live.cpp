#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_197059200494027966) {
   out_197059200494027966[0] = 0;
   out_197059200494027966[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_197059200494027966[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_197059200494027966[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_197059200494027966[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_197059200494027966[5] = -sin(in_vec[1]);
   out_197059200494027966[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_197059200494027966[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_197059200494027966[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_197059200494027966[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_197059200494027966[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_197059200494027966[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_197059200494027966[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_197059200494027966[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_197059200494027966[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_197059200494027966[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_197059200494027966[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_197059200494027966[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_4389981286306835332) {
   out_4389981286306835332[0] = delta_x[0] + nom_x[0];
   out_4389981286306835332[1] = delta_x[1] + nom_x[1];
   out_4389981286306835332[2] = delta_x[2] + nom_x[2];
   out_4389981286306835332[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_4389981286306835332[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_4389981286306835332[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_4389981286306835332[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_4389981286306835332[7] = delta_x[6] + nom_x[7];
   out_4389981286306835332[8] = delta_x[7] + nom_x[8];
   out_4389981286306835332[9] = delta_x[8] + nom_x[9];
   out_4389981286306835332[10] = delta_x[9] + nom_x[10];
   out_4389981286306835332[11] = delta_x[10] + nom_x[11];
   out_4389981286306835332[12] = delta_x[11] + nom_x[12];
   out_4389981286306835332[13] = delta_x[12] + nom_x[13];
   out_4389981286306835332[14] = delta_x[13] + nom_x[14];
   out_4389981286306835332[15] = delta_x[14] + nom_x[15];
   out_4389981286306835332[16] = delta_x[15] + nom_x[16];
   out_4389981286306835332[17] = delta_x[16] + nom_x[17];
   out_4389981286306835332[18] = delta_x[17] + nom_x[18];
   out_4389981286306835332[19] = delta_x[18] + nom_x[19];
   out_4389981286306835332[20] = delta_x[19] + nom_x[20];
   out_4389981286306835332[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_2871076421796127612) {
   out_2871076421796127612[0] = -nom_x[0] + true_x[0];
   out_2871076421796127612[1] = -nom_x[1] + true_x[1];
   out_2871076421796127612[2] = -nom_x[2] + true_x[2];
   out_2871076421796127612[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_2871076421796127612[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_2871076421796127612[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_2871076421796127612[6] = -nom_x[7] + true_x[7];
   out_2871076421796127612[7] = -nom_x[8] + true_x[8];
   out_2871076421796127612[8] = -nom_x[9] + true_x[9];
   out_2871076421796127612[9] = -nom_x[10] + true_x[10];
   out_2871076421796127612[10] = -nom_x[11] + true_x[11];
   out_2871076421796127612[11] = -nom_x[12] + true_x[12];
   out_2871076421796127612[12] = -nom_x[13] + true_x[13];
   out_2871076421796127612[13] = -nom_x[14] + true_x[14];
   out_2871076421796127612[14] = -nom_x[15] + true_x[15];
   out_2871076421796127612[15] = -nom_x[16] + true_x[16];
   out_2871076421796127612[16] = -nom_x[17] + true_x[17];
   out_2871076421796127612[17] = -nom_x[18] + true_x[18];
   out_2871076421796127612[18] = -nom_x[19] + true_x[19];
   out_2871076421796127612[19] = -nom_x[20] + true_x[20];
   out_2871076421796127612[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_5155217794973921661) {
   out_5155217794973921661[0] = 1.0;
   out_5155217794973921661[1] = 0;
   out_5155217794973921661[2] = 0;
   out_5155217794973921661[3] = 0;
   out_5155217794973921661[4] = 0;
   out_5155217794973921661[5] = 0;
   out_5155217794973921661[6] = 0;
   out_5155217794973921661[7] = 0;
   out_5155217794973921661[8] = 0;
   out_5155217794973921661[9] = 0;
   out_5155217794973921661[10] = 0;
   out_5155217794973921661[11] = 0;
   out_5155217794973921661[12] = 0;
   out_5155217794973921661[13] = 0;
   out_5155217794973921661[14] = 0;
   out_5155217794973921661[15] = 0;
   out_5155217794973921661[16] = 0;
   out_5155217794973921661[17] = 0;
   out_5155217794973921661[18] = 0;
   out_5155217794973921661[19] = 0;
   out_5155217794973921661[20] = 0;
   out_5155217794973921661[21] = 0;
   out_5155217794973921661[22] = 1.0;
   out_5155217794973921661[23] = 0;
   out_5155217794973921661[24] = 0;
   out_5155217794973921661[25] = 0;
   out_5155217794973921661[26] = 0;
   out_5155217794973921661[27] = 0;
   out_5155217794973921661[28] = 0;
   out_5155217794973921661[29] = 0;
   out_5155217794973921661[30] = 0;
   out_5155217794973921661[31] = 0;
   out_5155217794973921661[32] = 0;
   out_5155217794973921661[33] = 0;
   out_5155217794973921661[34] = 0;
   out_5155217794973921661[35] = 0;
   out_5155217794973921661[36] = 0;
   out_5155217794973921661[37] = 0;
   out_5155217794973921661[38] = 0;
   out_5155217794973921661[39] = 0;
   out_5155217794973921661[40] = 0;
   out_5155217794973921661[41] = 0;
   out_5155217794973921661[42] = 0;
   out_5155217794973921661[43] = 0;
   out_5155217794973921661[44] = 1.0;
   out_5155217794973921661[45] = 0;
   out_5155217794973921661[46] = 0;
   out_5155217794973921661[47] = 0;
   out_5155217794973921661[48] = 0;
   out_5155217794973921661[49] = 0;
   out_5155217794973921661[50] = 0;
   out_5155217794973921661[51] = 0;
   out_5155217794973921661[52] = 0;
   out_5155217794973921661[53] = 0;
   out_5155217794973921661[54] = 0;
   out_5155217794973921661[55] = 0;
   out_5155217794973921661[56] = 0;
   out_5155217794973921661[57] = 0;
   out_5155217794973921661[58] = 0;
   out_5155217794973921661[59] = 0;
   out_5155217794973921661[60] = 0;
   out_5155217794973921661[61] = 0;
   out_5155217794973921661[62] = 0;
   out_5155217794973921661[63] = 0;
   out_5155217794973921661[64] = 0;
   out_5155217794973921661[65] = 0;
   out_5155217794973921661[66] = -0.5*state[4];
   out_5155217794973921661[67] = -0.5*state[5];
   out_5155217794973921661[68] = -0.5*state[6];
   out_5155217794973921661[69] = 0;
   out_5155217794973921661[70] = 0;
   out_5155217794973921661[71] = 0;
   out_5155217794973921661[72] = 0;
   out_5155217794973921661[73] = 0;
   out_5155217794973921661[74] = 0;
   out_5155217794973921661[75] = 0;
   out_5155217794973921661[76] = 0;
   out_5155217794973921661[77] = 0;
   out_5155217794973921661[78] = 0;
   out_5155217794973921661[79] = 0;
   out_5155217794973921661[80] = 0;
   out_5155217794973921661[81] = 0;
   out_5155217794973921661[82] = 0;
   out_5155217794973921661[83] = 0;
   out_5155217794973921661[84] = 0;
   out_5155217794973921661[85] = 0;
   out_5155217794973921661[86] = 0;
   out_5155217794973921661[87] = 0.5*state[3];
   out_5155217794973921661[88] = 0.5*state[6];
   out_5155217794973921661[89] = -0.5*state[5];
   out_5155217794973921661[90] = 0;
   out_5155217794973921661[91] = 0;
   out_5155217794973921661[92] = 0;
   out_5155217794973921661[93] = 0;
   out_5155217794973921661[94] = 0;
   out_5155217794973921661[95] = 0;
   out_5155217794973921661[96] = 0;
   out_5155217794973921661[97] = 0;
   out_5155217794973921661[98] = 0;
   out_5155217794973921661[99] = 0;
   out_5155217794973921661[100] = 0;
   out_5155217794973921661[101] = 0;
   out_5155217794973921661[102] = 0;
   out_5155217794973921661[103] = 0;
   out_5155217794973921661[104] = 0;
   out_5155217794973921661[105] = 0;
   out_5155217794973921661[106] = 0;
   out_5155217794973921661[107] = 0;
   out_5155217794973921661[108] = -0.5*state[6];
   out_5155217794973921661[109] = 0.5*state[3];
   out_5155217794973921661[110] = 0.5*state[4];
   out_5155217794973921661[111] = 0;
   out_5155217794973921661[112] = 0;
   out_5155217794973921661[113] = 0;
   out_5155217794973921661[114] = 0;
   out_5155217794973921661[115] = 0;
   out_5155217794973921661[116] = 0;
   out_5155217794973921661[117] = 0;
   out_5155217794973921661[118] = 0;
   out_5155217794973921661[119] = 0;
   out_5155217794973921661[120] = 0;
   out_5155217794973921661[121] = 0;
   out_5155217794973921661[122] = 0;
   out_5155217794973921661[123] = 0;
   out_5155217794973921661[124] = 0;
   out_5155217794973921661[125] = 0;
   out_5155217794973921661[126] = 0;
   out_5155217794973921661[127] = 0;
   out_5155217794973921661[128] = 0;
   out_5155217794973921661[129] = 0.5*state[5];
   out_5155217794973921661[130] = -0.5*state[4];
   out_5155217794973921661[131] = 0.5*state[3];
   out_5155217794973921661[132] = 0;
   out_5155217794973921661[133] = 0;
   out_5155217794973921661[134] = 0;
   out_5155217794973921661[135] = 0;
   out_5155217794973921661[136] = 0;
   out_5155217794973921661[137] = 0;
   out_5155217794973921661[138] = 0;
   out_5155217794973921661[139] = 0;
   out_5155217794973921661[140] = 0;
   out_5155217794973921661[141] = 0;
   out_5155217794973921661[142] = 0;
   out_5155217794973921661[143] = 0;
   out_5155217794973921661[144] = 0;
   out_5155217794973921661[145] = 0;
   out_5155217794973921661[146] = 0;
   out_5155217794973921661[147] = 0;
   out_5155217794973921661[148] = 0;
   out_5155217794973921661[149] = 0;
   out_5155217794973921661[150] = 0;
   out_5155217794973921661[151] = 0;
   out_5155217794973921661[152] = 0;
   out_5155217794973921661[153] = 1.0;
   out_5155217794973921661[154] = 0;
   out_5155217794973921661[155] = 0;
   out_5155217794973921661[156] = 0;
   out_5155217794973921661[157] = 0;
   out_5155217794973921661[158] = 0;
   out_5155217794973921661[159] = 0;
   out_5155217794973921661[160] = 0;
   out_5155217794973921661[161] = 0;
   out_5155217794973921661[162] = 0;
   out_5155217794973921661[163] = 0;
   out_5155217794973921661[164] = 0;
   out_5155217794973921661[165] = 0;
   out_5155217794973921661[166] = 0;
   out_5155217794973921661[167] = 0;
   out_5155217794973921661[168] = 0;
   out_5155217794973921661[169] = 0;
   out_5155217794973921661[170] = 0;
   out_5155217794973921661[171] = 0;
   out_5155217794973921661[172] = 0;
   out_5155217794973921661[173] = 0;
   out_5155217794973921661[174] = 0;
   out_5155217794973921661[175] = 1.0;
   out_5155217794973921661[176] = 0;
   out_5155217794973921661[177] = 0;
   out_5155217794973921661[178] = 0;
   out_5155217794973921661[179] = 0;
   out_5155217794973921661[180] = 0;
   out_5155217794973921661[181] = 0;
   out_5155217794973921661[182] = 0;
   out_5155217794973921661[183] = 0;
   out_5155217794973921661[184] = 0;
   out_5155217794973921661[185] = 0;
   out_5155217794973921661[186] = 0;
   out_5155217794973921661[187] = 0;
   out_5155217794973921661[188] = 0;
   out_5155217794973921661[189] = 0;
   out_5155217794973921661[190] = 0;
   out_5155217794973921661[191] = 0;
   out_5155217794973921661[192] = 0;
   out_5155217794973921661[193] = 0;
   out_5155217794973921661[194] = 0;
   out_5155217794973921661[195] = 0;
   out_5155217794973921661[196] = 0;
   out_5155217794973921661[197] = 1.0;
   out_5155217794973921661[198] = 0;
   out_5155217794973921661[199] = 0;
   out_5155217794973921661[200] = 0;
   out_5155217794973921661[201] = 0;
   out_5155217794973921661[202] = 0;
   out_5155217794973921661[203] = 0;
   out_5155217794973921661[204] = 0;
   out_5155217794973921661[205] = 0;
   out_5155217794973921661[206] = 0;
   out_5155217794973921661[207] = 0;
   out_5155217794973921661[208] = 0;
   out_5155217794973921661[209] = 0;
   out_5155217794973921661[210] = 0;
   out_5155217794973921661[211] = 0;
   out_5155217794973921661[212] = 0;
   out_5155217794973921661[213] = 0;
   out_5155217794973921661[214] = 0;
   out_5155217794973921661[215] = 0;
   out_5155217794973921661[216] = 0;
   out_5155217794973921661[217] = 0;
   out_5155217794973921661[218] = 0;
   out_5155217794973921661[219] = 1.0;
   out_5155217794973921661[220] = 0;
   out_5155217794973921661[221] = 0;
   out_5155217794973921661[222] = 0;
   out_5155217794973921661[223] = 0;
   out_5155217794973921661[224] = 0;
   out_5155217794973921661[225] = 0;
   out_5155217794973921661[226] = 0;
   out_5155217794973921661[227] = 0;
   out_5155217794973921661[228] = 0;
   out_5155217794973921661[229] = 0;
   out_5155217794973921661[230] = 0;
   out_5155217794973921661[231] = 0;
   out_5155217794973921661[232] = 0;
   out_5155217794973921661[233] = 0;
   out_5155217794973921661[234] = 0;
   out_5155217794973921661[235] = 0;
   out_5155217794973921661[236] = 0;
   out_5155217794973921661[237] = 0;
   out_5155217794973921661[238] = 0;
   out_5155217794973921661[239] = 0;
   out_5155217794973921661[240] = 0;
   out_5155217794973921661[241] = 1.0;
   out_5155217794973921661[242] = 0;
   out_5155217794973921661[243] = 0;
   out_5155217794973921661[244] = 0;
   out_5155217794973921661[245] = 0;
   out_5155217794973921661[246] = 0;
   out_5155217794973921661[247] = 0;
   out_5155217794973921661[248] = 0;
   out_5155217794973921661[249] = 0;
   out_5155217794973921661[250] = 0;
   out_5155217794973921661[251] = 0;
   out_5155217794973921661[252] = 0;
   out_5155217794973921661[253] = 0;
   out_5155217794973921661[254] = 0;
   out_5155217794973921661[255] = 0;
   out_5155217794973921661[256] = 0;
   out_5155217794973921661[257] = 0;
   out_5155217794973921661[258] = 0;
   out_5155217794973921661[259] = 0;
   out_5155217794973921661[260] = 0;
   out_5155217794973921661[261] = 0;
   out_5155217794973921661[262] = 0;
   out_5155217794973921661[263] = 1.0;
   out_5155217794973921661[264] = 0;
   out_5155217794973921661[265] = 0;
   out_5155217794973921661[266] = 0;
   out_5155217794973921661[267] = 0;
   out_5155217794973921661[268] = 0;
   out_5155217794973921661[269] = 0;
   out_5155217794973921661[270] = 0;
   out_5155217794973921661[271] = 0;
   out_5155217794973921661[272] = 0;
   out_5155217794973921661[273] = 0;
   out_5155217794973921661[274] = 0;
   out_5155217794973921661[275] = 0;
   out_5155217794973921661[276] = 0;
   out_5155217794973921661[277] = 0;
   out_5155217794973921661[278] = 0;
   out_5155217794973921661[279] = 0;
   out_5155217794973921661[280] = 0;
   out_5155217794973921661[281] = 0;
   out_5155217794973921661[282] = 0;
   out_5155217794973921661[283] = 0;
   out_5155217794973921661[284] = 0;
   out_5155217794973921661[285] = 1.0;
   out_5155217794973921661[286] = 0;
   out_5155217794973921661[287] = 0;
   out_5155217794973921661[288] = 0;
   out_5155217794973921661[289] = 0;
   out_5155217794973921661[290] = 0;
   out_5155217794973921661[291] = 0;
   out_5155217794973921661[292] = 0;
   out_5155217794973921661[293] = 0;
   out_5155217794973921661[294] = 0;
   out_5155217794973921661[295] = 0;
   out_5155217794973921661[296] = 0;
   out_5155217794973921661[297] = 0;
   out_5155217794973921661[298] = 0;
   out_5155217794973921661[299] = 0;
   out_5155217794973921661[300] = 0;
   out_5155217794973921661[301] = 0;
   out_5155217794973921661[302] = 0;
   out_5155217794973921661[303] = 0;
   out_5155217794973921661[304] = 0;
   out_5155217794973921661[305] = 0;
   out_5155217794973921661[306] = 0;
   out_5155217794973921661[307] = 1.0;
   out_5155217794973921661[308] = 0;
   out_5155217794973921661[309] = 0;
   out_5155217794973921661[310] = 0;
   out_5155217794973921661[311] = 0;
   out_5155217794973921661[312] = 0;
   out_5155217794973921661[313] = 0;
   out_5155217794973921661[314] = 0;
   out_5155217794973921661[315] = 0;
   out_5155217794973921661[316] = 0;
   out_5155217794973921661[317] = 0;
   out_5155217794973921661[318] = 0;
   out_5155217794973921661[319] = 0;
   out_5155217794973921661[320] = 0;
   out_5155217794973921661[321] = 0;
   out_5155217794973921661[322] = 0;
   out_5155217794973921661[323] = 0;
   out_5155217794973921661[324] = 0;
   out_5155217794973921661[325] = 0;
   out_5155217794973921661[326] = 0;
   out_5155217794973921661[327] = 0;
   out_5155217794973921661[328] = 0;
   out_5155217794973921661[329] = 1.0;
   out_5155217794973921661[330] = 0;
   out_5155217794973921661[331] = 0;
   out_5155217794973921661[332] = 0;
   out_5155217794973921661[333] = 0;
   out_5155217794973921661[334] = 0;
   out_5155217794973921661[335] = 0;
   out_5155217794973921661[336] = 0;
   out_5155217794973921661[337] = 0;
   out_5155217794973921661[338] = 0;
   out_5155217794973921661[339] = 0;
   out_5155217794973921661[340] = 0;
   out_5155217794973921661[341] = 0;
   out_5155217794973921661[342] = 0;
   out_5155217794973921661[343] = 0;
   out_5155217794973921661[344] = 0;
   out_5155217794973921661[345] = 0;
   out_5155217794973921661[346] = 0;
   out_5155217794973921661[347] = 0;
   out_5155217794973921661[348] = 0;
   out_5155217794973921661[349] = 0;
   out_5155217794973921661[350] = 0;
   out_5155217794973921661[351] = 1.0;
   out_5155217794973921661[352] = 0;
   out_5155217794973921661[353] = 0;
   out_5155217794973921661[354] = 0;
   out_5155217794973921661[355] = 0;
   out_5155217794973921661[356] = 0;
   out_5155217794973921661[357] = 0;
   out_5155217794973921661[358] = 0;
   out_5155217794973921661[359] = 0;
   out_5155217794973921661[360] = 0;
   out_5155217794973921661[361] = 0;
   out_5155217794973921661[362] = 0;
   out_5155217794973921661[363] = 0;
   out_5155217794973921661[364] = 0;
   out_5155217794973921661[365] = 0;
   out_5155217794973921661[366] = 0;
   out_5155217794973921661[367] = 0;
   out_5155217794973921661[368] = 0;
   out_5155217794973921661[369] = 0;
   out_5155217794973921661[370] = 0;
   out_5155217794973921661[371] = 0;
   out_5155217794973921661[372] = 0;
   out_5155217794973921661[373] = 1.0;
   out_5155217794973921661[374] = 0;
   out_5155217794973921661[375] = 0;
   out_5155217794973921661[376] = 0;
   out_5155217794973921661[377] = 0;
   out_5155217794973921661[378] = 0;
   out_5155217794973921661[379] = 0;
   out_5155217794973921661[380] = 0;
   out_5155217794973921661[381] = 0;
   out_5155217794973921661[382] = 0;
   out_5155217794973921661[383] = 0;
   out_5155217794973921661[384] = 0;
   out_5155217794973921661[385] = 0;
   out_5155217794973921661[386] = 0;
   out_5155217794973921661[387] = 0;
   out_5155217794973921661[388] = 0;
   out_5155217794973921661[389] = 0;
   out_5155217794973921661[390] = 0;
   out_5155217794973921661[391] = 0;
   out_5155217794973921661[392] = 0;
   out_5155217794973921661[393] = 0;
   out_5155217794973921661[394] = 0;
   out_5155217794973921661[395] = 1.0;
   out_5155217794973921661[396] = 0;
   out_5155217794973921661[397] = 0;
   out_5155217794973921661[398] = 0;
   out_5155217794973921661[399] = 0;
   out_5155217794973921661[400] = 0;
   out_5155217794973921661[401] = 0;
   out_5155217794973921661[402] = 0;
   out_5155217794973921661[403] = 0;
   out_5155217794973921661[404] = 0;
   out_5155217794973921661[405] = 0;
   out_5155217794973921661[406] = 0;
   out_5155217794973921661[407] = 0;
   out_5155217794973921661[408] = 0;
   out_5155217794973921661[409] = 0;
   out_5155217794973921661[410] = 0;
   out_5155217794973921661[411] = 0;
   out_5155217794973921661[412] = 0;
   out_5155217794973921661[413] = 0;
   out_5155217794973921661[414] = 0;
   out_5155217794973921661[415] = 0;
   out_5155217794973921661[416] = 0;
   out_5155217794973921661[417] = 1.0;
   out_5155217794973921661[418] = 0;
   out_5155217794973921661[419] = 0;
   out_5155217794973921661[420] = 0;
   out_5155217794973921661[421] = 0;
   out_5155217794973921661[422] = 0;
   out_5155217794973921661[423] = 0;
   out_5155217794973921661[424] = 0;
   out_5155217794973921661[425] = 0;
   out_5155217794973921661[426] = 0;
   out_5155217794973921661[427] = 0;
   out_5155217794973921661[428] = 0;
   out_5155217794973921661[429] = 0;
   out_5155217794973921661[430] = 0;
   out_5155217794973921661[431] = 0;
   out_5155217794973921661[432] = 0;
   out_5155217794973921661[433] = 0;
   out_5155217794973921661[434] = 0;
   out_5155217794973921661[435] = 0;
   out_5155217794973921661[436] = 0;
   out_5155217794973921661[437] = 0;
   out_5155217794973921661[438] = 0;
   out_5155217794973921661[439] = 1.0;
   out_5155217794973921661[440] = 0;
   out_5155217794973921661[441] = 0;
   out_5155217794973921661[442] = 0;
   out_5155217794973921661[443] = 0;
   out_5155217794973921661[444] = 0;
   out_5155217794973921661[445] = 0;
   out_5155217794973921661[446] = 0;
   out_5155217794973921661[447] = 0;
   out_5155217794973921661[448] = 0;
   out_5155217794973921661[449] = 0;
   out_5155217794973921661[450] = 0;
   out_5155217794973921661[451] = 0;
   out_5155217794973921661[452] = 0;
   out_5155217794973921661[453] = 0;
   out_5155217794973921661[454] = 0;
   out_5155217794973921661[455] = 0;
   out_5155217794973921661[456] = 0;
   out_5155217794973921661[457] = 0;
   out_5155217794973921661[458] = 0;
   out_5155217794973921661[459] = 0;
   out_5155217794973921661[460] = 0;
   out_5155217794973921661[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_5503960962388644187) {
   out_5503960962388644187[0] = dt*state[7] + state[0];
   out_5503960962388644187[1] = dt*state[8] + state[1];
   out_5503960962388644187[2] = dt*state[9] + state[2];
   out_5503960962388644187[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_5503960962388644187[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_5503960962388644187[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_5503960962388644187[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_5503960962388644187[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_5503960962388644187[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_5503960962388644187[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_5503960962388644187[10] = state[10];
   out_5503960962388644187[11] = state[11];
   out_5503960962388644187[12] = state[12];
   out_5503960962388644187[13] = state[13];
   out_5503960962388644187[14] = state[14];
   out_5503960962388644187[15] = state[15];
   out_5503960962388644187[16] = state[16];
   out_5503960962388644187[17] = state[17];
   out_5503960962388644187[18] = state[18];
   out_5503960962388644187[19] = state[19];
   out_5503960962388644187[20] = state[20];
   out_5503960962388644187[21] = state[21];
}
void F_fun(double *state, double dt, double *out_2076298069187341018) {
   out_2076298069187341018[0] = 1;
   out_2076298069187341018[1] = 0;
   out_2076298069187341018[2] = 0;
   out_2076298069187341018[3] = 0;
   out_2076298069187341018[4] = 0;
   out_2076298069187341018[5] = 0;
   out_2076298069187341018[6] = dt;
   out_2076298069187341018[7] = 0;
   out_2076298069187341018[8] = 0;
   out_2076298069187341018[9] = 0;
   out_2076298069187341018[10] = 0;
   out_2076298069187341018[11] = 0;
   out_2076298069187341018[12] = 0;
   out_2076298069187341018[13] = 0;
   out_2076298069187341018[14] = 0;
   out_2076298069187341018[15] = 0;
   out_2076298069187341018[16] = 0;
   out_2076298069187341018[17] = 0;
   out_2076298069187341018[18] = 0;
   out_2076298069187341018[19] = 0;
   out_2076298069187341018[20] = 0;
   out_2076298069187341018[21] = 0;
   out_2076298069187341018[22] = 1;
   out_2076298069187341018[23] = 0;
   out_2076298069187341018[24] = 0;
   out_2076298069187341018[25] = 0;
   out_2076298069187341018[26] = 0;
   out_2076298069187341018[27] = 0;
   out_2076298069187341018[28] = dt;
   out_2076298069187341018[29] = 0;
   out_2076298069187341018[30] = 0;
   out_2076298069187341018[31] = 0;
   out_2076298069187341018[32] = 0;
   out_2076298069187341018[33] = 0;
   out_2076298069187341018[34] = 0;
   out_2076298069187341018[35] = 0;
   out_2076298069187341018[36] = 0;
   out_2076298069187341018[37] = 0;
   out_2076298069187341018[38] = 0;
   out_2076298069187341018[39] = 0;
   out_2076298069187341018[40] = 0;
   out_2076298069187341018[41] = 0;
   out_2076298069187341018[42] = 0;
   out_2076298069187341018[43] = 0;
   out_2076298069187341018[44] = 1;
   out_2076298069187341018[45] = 0;
   out_2076298069187341018[46] = 0;
   out_2076298069187341018[47] = 0;
   out_2076298069187341018[48] = 0;
   out_2076298069187341018[49] = 0;
   out_2076298069187341018[50] = dt;
   out_2076298069187341018[51] = 0;
   out_2076298069187341018[52] = 0;
   out_2076298069187341018[53] = 0;
   out_2076298069187341018[54] = 0;
   out_2076298069187341018[55] = 0;
   out_2076298069187341018[56] = 0;
   out_2076298069187341018[57] = 0;
   out_2076298069187341018[58] = 0;
   out_2076298069187341018[59] = 0;
   out_2076298069187341018[60] = 0;
   out_2076298069187341018[61] = 0;
   out_2076298069187341018[62] = 0;
   out_2076298069187341018[63] = 0;
   out_2076298069187341018[64] = 0;
   out_2076298069187341018[65] = 0;
   out_2076298069187341018[66] = 1;
   out_2076298069187341018[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_2076298069187341018[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_2076298069187341018[69] = 0;
   out_2076298069187341018[70] = 0;
   out_2076298069187341018[71] = 0;
   out_2076298069187341018[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_2076298069187341018[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2076298069187341018[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2076298069187341018[75] = 0;
   out_2076298069187341018[76] = 0;
   out_2076298069187341018[77] = 0;
   out_2076298069187341018[78] = 0;
   out_2076298069187341018[79] = 0;
   out_2076298069187341018[80] = 0;
   out_2076298069187341018[81] = 0;
   out_2076298069187341018[82] = 0;
   out_2076298069187341018[83] = 0;
   out_2076298069187341018[84] = 0;
   out_2076298069187341018[85] = 0;
   out_2076298069187341018[86] = 0;
   out_2076298069187341018[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_2076298069187341018[88] = 1;
   out_2076298069187341018[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_2076298069187341018[90] = 0;
   out_2076298069187341018[91] = 0;
   out_2076298069187341018[92] = 0;
   out_2076298069187341018[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2076298069187341018[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_2076298069187341018[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2076298069187341018[96] = 0;
   out_2076298069187341018[97] = 0;
   out_2076298069187341018[98] = 0;
   out_2076298069187341018[99] = 0;
   out_2076298069187341018[100] = 0;
   out_2076298069187341018[101] = 0;
   out_2076298069187341018[102] = 0;
   out_2076298069187341018[103] = 0;
   out_2076298069187341018[104] = 0;
   out_2076298069187341018[105] = 0;
   out_2076298069187341018[106] = 0;
   out_2076298069187341018[107] = 0;
   out_2076298069187341018[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_2076298069187341018[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_2076298069187341018[110] = 1;
   out_2076298069187341018[111] = 0;
   out_2076298069187341018[112] = 0;
   out_2076298069187341018[113] = 0;
   out_2076298069187341018[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2076298069187341018[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2076298069187341018[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_2076298069187341018[117] = 0;
   out_2076298069187341018[118] = 0;
   out_2076298069187341018[119] = 0;
   out_2076298069187341018[120] = 0;
   out_2076298069187341018[121] = 0;
   out_2076298069187341018[122] = 0;
   out_2076298069187341018[123] = 0;
   out_2076298069187341018[124] = 0;
   out_2076298069187341018[125] = 0;
   out_2076298069187341018[126] = 0;
   out_2076298069187341018[127] = 0;
   out_2076298069187341018[128] = 0;
   out_2076298069187341018[129] = 0;
   out_2076298069187341018[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_2076298069187341018[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_2076298069187341018[132] = 1;
   out_2076298069187341018[133] = 0;
   out_2076298069187341018[134] = 0;
   out_2076298069187341018[135] = 0;
   out_2076298069187341018[136] = 0;
   out_2076298069187341018[137] = 0;
   out_2076298069187341018[138] = 0;
   out_2076298069187341018[139] = 0;
   out_2076298069187341018[140] = 0;
   out_2076298069187341018[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_2076298069187341018[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2076298069187341018[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2076298069187341018[144] = 0;
   out_2076298069187341018[145] = 0;
   out_2076298069187341018[146] = 0;
   out_2076298069187341018[147] = 0;
   out_2076298069187341018[148] = 0;
   out_2076298069187341018[149] = 0;
   out_2076298069187341018[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_2076298069187341018[151] = 0;
   out_2076298069187341018[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_2076298069187341018[153] = 0;
   out_2076298069187341018[154] = 1;
   out_2076298069187341018[155] = 0;
   out_2076298069187341018[156] = 0;
   out_2076298069187341018[157] = 0;
   out_2076298069187341018[158] = 0;
   out_2076298069187341018[159] = 0;
   out_2076298069187341018[160] = 0;
   out_2076298069187341018[161] = 0;
   out_2076298069187341018[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2076298069187341018[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_2076298069187341018[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2076298069187341018[165] = 0;
   out_2076298069187341018[166] = 0;
   out_2076298069187341018[167] = 0;
   out_2076298069187341018[168] = 0;
   out_2076298069187341018[169] = 0;
   out_2076298069187341018[170] = 0;
   out_2076298069187341018[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_2076298069187341018[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_2076298069187341018[173] = 0;
   out_2076298069187341018[174] = 0;
   out_2076298069187341018[175] = 0;
   out_2076298069187341018[176] = 1;
   out_2076298069187341018[177] = 0;
   out_2076298069187341018[178] = 0;
   out_2076298069187341018[179] = 0;
   out_2076298069187341018[180] = 0;
   out_2076298069187341018[181] = 0;
   out_2076298069187341018[182] = 0;
   out_2076298069187341018[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2076298069187341018[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2076298069187341018[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_2076298069187341018[186] = 0;
   out_2076298069187341018[187] = 0;
   out_2076298069187341018[188] = 0;
   out_2076298069187341018[189] = 0;
   out_2076298069187341018[190] = 0;
   out_2076298069187341018[191] = 0;
   out_2076298069187341018[192] = 0;
   out_2076298069187341018[193] = 0;
   out_2076298069187341018[194] = 0;
   out_2076298069187341018[195] = 0;
   out_2076298069187341018[196] = 0;
   out_2076298069187341018[197] = 0;
   out_2076298069187341018[198] = 1;
   out_2076298069187341018[199] = 0;
   out_2076298069187341018[200] = 0;
   out_2076298069187341018[201] = 0;
   out_2076298069187341018[202] = 0;
   out_2076298069187341018[203] = 0;
   out_2076298069187341018[204] = 0;
   out_2076298069187341018[205] = 0;
   out_2076298069187341018[206] = 0;
   out_2076298069187341018[207] = 0;
   out_2076298069187341018[208] = 0;
   out_2076298069187341018[209] = 0;
   out_2076298069187341018[210] = 0;
   out_2076298069187341018[211] = 0;
   out_2076298069187341018[212] = 0;
   out_2076298069187341018[213] = 0;
   out_2076298069187341018[214] = 0;
   out_2076298069187341018[215] = 0;
   out_2076298069187341018[216] = 0;
   out_2076298069187341018[217] = 0;
   out_2076298069187341018[218] = 0;
   out_2076298069187341018[219] = 0;
   out_2076298069187341018[220] = 1;
   out_2076298069187341018[221] = 0;
   out_2076298069187341018[222] = 0;
   out_2076298069187341018[223] = 0;
   out_2076298069187341018[224] = 0;
   out_2076298069187341018[225] = 0;
   out_2076298069187341018[226] = 0;
   out_2076298069187341018[227] = 0;
   out_2076298069187341018[228] = 0;
   out_2076298069187341018[229] = 0;
   out_2076298069187341018[230] = 0;
   out_2076298069187341018[231] = 0;
   out_2076298069187341018[232] = 0;
   out_2076298069187341018[233] = 0;
   out_2076298069187341018[234] = 0;
   out_2076298069187341018[235] = 0;
   out_2076298069187341018[236] = 0;
   out_2076298069187341018[237] = 0;
   out_2076298069187341018[238] = 0;
   out_2076298069187341018[239] = 0;
   out_2076298069187341018[240] = 0;
   out_2076298069187341018[241] = 0;
   out_2076298069187341018[242] = 1;
   out_2076298069187341018[243] = 0;
   out_2076298069187341018[244] = 0;
   out_2076298069187341018[245] = 0;
   out_2076298069187341018[246] = 0;
   out_2076298069187341018[247] = 0;
   out_2076298069187341018[248] = 0;
   out_2076298069187341018[249] = 0;
   out_2076298069187341018[250] = 0;
   out_2076298069187341018[251] = 0;
   out_2076298069187341018[252] = 0;
   out_2076298069187341018[253] = 0;
   out_2076298069187341018[254] = 0;
   out_2076298069187341018[255] = 0;
   out_2076298069187341018[256] = 0;
   out_2076298069187341018[257] = 0;
   out_2076298069187341018[258] = 0;
   out_2076298069187341018[259] = 0;
   out_2076298069187341018[260] = 0;
   out_2076298069187341018[261] = 0;
   out_2076298069187341018[262] = 0;
   out_2076298069187341018[263] = 0;
   out_2076298069187341018[264] = 1;
   out_2076298069187341018[265] = 0;
   out_2076298069187341018[266] = 0;
   out_2076298069187341018[267] = 0;
   out_2076298069187341018[268] = 0;
   out_2076298069187341018[269] = 0;
   out_2076298069187341018[270] = 0;
   out_2076298069187341018[271] = 0;
   out_2076298069187341018[272] = 0;
   out_2076298069187341018[273] = 0;
   out_2076298069187341018[274] = 0;
   out_2076298069187341018[275] = 0;
   out_2076298069187341018[276] = 0;
   out_2076298069187341018[277] = 0;
   out_2076298069187341018[278] = 0;
   out_2076298069187341018[279] = 0;
   out_2076298069187341018[280] = 0;
   out_2076298069187341018[281] = 0;
   out_2076298069187341018[282] = 0;
   out_2076298069187341018[283] = 0;
   out_2076298069187341018[284] = 0;
   out_2076298069187341018[285] = 0;
   out_2076298069187341018[286] = 1;
   out_2076298069187341018[287] = 0;
   out_2076298069187341018[288] = 0;
   out_2076298069187341018[289] = 0;
   out_2076298069187341018[290] = 0;
   out_2076298069187341018[291] = 0;
   out_2076298069187341018[292] = 0;
   out_2076298069187341018[293] = 0;
   out_2076298069187341018[294] = 0;
   out_2076298069187341018[295] = 0;
   out_2076298069187341018[296] = 0;
   out_2076298069187341018[297] = 0;
   out_2076298069187341018[298] = 0;
   out_2076298069187341018[299] = 0;
   out_2076298069187341018[300] = 0;
   out_2076298069187341018[301] = 0;
   out_2076298069187341018[302] = 0;
   out_2076298069187341018[303] = 0;
   out_2076298069187341018[304] = 0;
   out_2076298069187341018[305] = 0;
   out_2076298069187341018[306] = 0;
   out_2076298069187341018[307] = 0;
   out_2076298069187341018[308] = 1;
   out_2076298069187341018[309] = 0;
   out_2076298069187341018[310] = 0;
   out_2076298069187341018[311] = 0;
   out_2076298069187341018[312] = 0;
   out_2076298069187341018[313] = 0;
   out_2076298069187341018[314] = 0;
   out_2076298069187341018[315] = 0;
   out_2076298069187341018[316] = 0;
   out_2076298069187341018[317] = 0;
   out_2076298069187341018[318] = 0;
   out_2076298069187341018[319] = 0;
   out_2076298069187341018[320] = 0;
   out_2076298069187341018[321] = 0;
   out_2076298069187341018[322] = 0;
   out_2076298069187341018[323] = 0;
   out_2076298069187341018[324] = 0;
   out_2076298069187341018[325] = 0;
   out_2076298069187341018[326] = 0;
   out_2076298069187341018[327] = 0;
   out_2076298069187341018[328] = 0;
   out_2076298069187341018[329] = 0;
   out_2076298069187341018[330] = 1;
   out_2076298069187341018[331] = 0;
   out_2076298069187341018[332] = 0;
   out_2076298069187341018[333] = 0;
   out_2076298069187341018[334] = 0;
   out_2076298069187341018[335] = 0;
   out_2076298069187341018[336] = 0;
   out_2076298069187341018[337] = 0;
   out_2076298069187341018[338] = 0;
   out_2076298069187341018[339] = 0;
   out_2076298069187341018[340] = 0;
   out_2076298069187341018[341] = 0;
   out_2076298069187341018[342] = 0;
   out_2076298069187341018[343] = 0;
   out_2076298069187341018[344] = 0;
   out_2076298069187341018[345] = 0;
   out_2076298069187341018[346] = 0;
   out_2076298069187341018[347] = 0;
   out_2076298069187341018[348] = 0;
   out_2076298069187341018[349] = 0;
   out_2076298069187341018[350] = 0;
   out_2076298069187341018[351] = 0;
   out_2076298069187341018[352] = 1;
   out_2076298069187341018[353] = 0;
   out_2076298069187341018[354] = 0;
   out_2076298069187341018[355] = 0;
   out_2076298069187341018[356] = 0;
   out_2076298069187341018[357] = 0;
   out_2076298069187341018[358] = 0;
   out_2076298069187341018[359] = 0;
   out_2076298069187341018[360] = 0;
   out_2076298069187341018[361] = 0;
   out_2076298069187341018[362] = 0;
   out_2076298069187341018[363] = 0;
   out_2076298069187341018[364] = 0;
   out_2076298069187341018[365] = 0;
   out_2076298069187341018[366] = 0;
   out_2076298069187341018[367] = 0;
   out_2076298069187341018[368] = 0;
   out_2076298069187341018[369] = 0;
   out_2076298069187341018[370] = 0;
   out_2076298069187341018[371] = 0;
   out_2076298069187341018[372] = 0;
   out_2076298069187341018[373] = 0;
   out_2076298069187341018[374] = 1;
   out_2076298069187341018[375] = 0;
   out_2076298069187341018[376] = 0;
   out_2076298069187341018[377] = 0;
   out_2076298069187341018[378] = 0;
   out_2076298069187341018[379] = 0;
   out_2076298069187341018[380] = 0;
   out_2076298069187341018[381] = 0;
   out_2076298069187341018[382] = 0;
   out_2076298069187341018[383] = 0;
   out_2076298069187341018[384] = 0;
   out_2076298069187341018[385] = 0;
   out_2076298069187341018[386] = 0;
   out_2076298069187341018[387] = 0;
   out_2076298069187341018[388] = 0;
   out_2076298069187341018[389] = 0;
   out_2076298069187341018[390] = 0;
   out_2076298069187341018[391] = 0;
   out_2076298069187341018[392] = 0;
   out_2076298069187341018[393] = 0;
   out_2076298069187341018[394] = 0;
   out_2076298069187341018[395] = 0;
   out_2076298069187341018[396] = 1;
   out_2076298069187341018[397] = 0;
   out_2076298069187341018[398] = 0;
   out_2076298069187341018[399] = 0;
   out_2076298069187341018[400] = 0;
   out_2076298069187341018[401] = 0;
   out_2076298069187341018[402] = 0;
   out_2076298069187341018[403] = 0;
   out_2076298069187341018[404] = 0;
   out_2076298069187341018[405] = 0;
   out_2076298069187341018[406] = 0;
   out_2076298069187341018[407] = 0;
   out_2076298069187341018[408] = 0;
   out_2076298069187341018[409] = 0;
   out_2076298069187341018[410] = 0;
   out_2076298069187341018[411] = 0;
   out_2076298069187341018[412] = 0;
   out_2076298069187341018[413] = 0;
   out_2076298069187341018[414] = 0;
   out_2076298069187341018[415] = 0;
   out_2076298069187341018[416] = 0;
   out_2076298069187341018[417] = 0;
   out_2076298069187341018[418] = 1;
   out_2076298069187341018[419] = 0;
   out_2076298069187341018[420] = 0;
   out_2076298069187341018[421] = 0;
   out_2076298069187341018[422] = 0;
   out_2076298069187341018[423] = 0;
   out_2076298069187341018[424] = 0;
   out_2076298069187341018[425] = 0;
   out_2076298069187341018[426] = 0;
   out_2076298069187341018[427] = 0;
   out_2076298069187341018[428] = 0;
   out_2076298069187341018[429] = 0;
   out_2076298069187341018[430] = 0;
   out_2076298069187341018[431] = 0;
   out_2076298069187341018[432] = 0;
   out_2076298069187341018[433] = 0;
   out_2076298069187341018[434] = 0;
   out_2076298069187341018[435] = 0;
   out_2076298069187341018[436] = 0;
   out_2076298069187341018[437] = 0;
   out_2076298069187341018[438] = 0;
   out_2076298069187341018[439] = 0;
   out_2076298069187341018[440] = 1;
}
void h_4(double *state, double *unused, double *out_6715684721504435251) {
   out_6715684721504435251[0] = state[10] + state[13];
   out_6715684721504435251[1] = state[11] + state[14];
   out_6715684721504435251[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_7104865494532900345) {
   out_7104865494532900345[0] = 0;
   out_7104865494532900345[1] = 0;
   out_7104865494532900345[2] = 0;
   out_7104865494532900345[3] = 0;
   out_7104865494532900345[4] = 0;
   out_7104865494532900345[5] = 0;
   out_7104865494532900345[6] = 0;
   out_7104865494532900345[7] = 0;
   out_7104865494532900345[8] = 0;
   out_7104865494532900345[9] = 0;
   out_7104865494532900345[10] = 1;
   out_7104865494532900345[11] = 0;
   out_7104865494532900345[12] = 0;
   out_7104865494532900345[13] = 1;
   out_7104865494532900345[14] = 0;
   out_7104865494532900345[15] = 0;
   out_7104865494532900345[16] = 0;
   out_7104865494532900345[17] = 0;
   out_7104865494532900345[18] = 0;
   out_7104865494532900345[19] = 0;
   out_7104865494532900345[20] = 0;
   out_7104865494532900345[21] = 0;
   out_7104865494532900345[22] = 0;
   out_7104865494532900345[23] = 0;
   out_7104865494532900345[24] = 0;
   out_7104865494532900345[25] = 0;
   out_7104865494532900345[26] = 0;
   out_7104865494532900345[27] = 0;
   out_7104865494532900345[28] = 0;
   out_7104865494532900345[29] = 0;
   out_7104865494532900345[30] = 0;
   out_7104865494532900345[31] = 0;
   out_7104865494532900345[32] = 0;
   out_7104865494532900345[33] = 1;
   out_7104865494532900345[34] = 0;
   out_7104865494532900345[35] = 0;
   out_7104865494532900345[36] = 1;
   out_7104865494532900345[37] = 0;
   out_7104865494532900345[38] = 0;
   out_7104865494532900345[39] = 0;
   out_7104865494532900345[40] = 0;
   out_7104865494532900345[41] = 0;
   out_7104865494532900345[42] = 0;
   out_7104865494532900345[43] = 0;
   out_7104865494532900345[44] = 0;
   out_7104865494532900345[45] = 0;
   out_7104865494532900345[46] = 0;
   out_7104865494532900345[47] = 0;
   out_7104865494532900345[48] = 0;
   out_7104865494532900345[49] = 0;
   out_7104865494532900345[50] = 0;
   out_7104865494532900345[51] = 0;
   out_7104865494532900345[52] = 0;
   out_7104865494532900345[53] = 0;
   out_7104865494532900345[54] = 0;
   out_7104865494532900345[55] = 0;
   out_7104865494532900345[56] = 1;
   out_7104865494532900345[57] = 0;
   out_7104865494532900345[58] = 0;
   out_7104865494532900345[59] = 1;
   out_7104865494532900345[60] = 0;
   out_7104865494532900345[61] = 0;
   out_7104865494532900345[62] = 0;
   out_7104865494532900345[63] = 0;
   out_7104865494532900345[64] = 0;
   out_7104865494532900345[65] = 0;
}
void h_9(double *state, double *unused, double *out_9081503026275750675) {
   out_9081503026275750675[0] = state[10];
   out_9081503026275750675[1] = state[11];
   out_9081503026275750675[2] = state[12];
}
void H_9(double *state, double *unused, double *out_4054659643912203801) {
   out_4054659643912203801[0] = 0;
   out_4054659643912203801[1] = 0;
   out_4054659643912203801[2] = 0;
   out_4054659643912203801[3] = 0;
   out_4054659643912203801[4] = 0;
   out_4054659643912203801[5] = 0;
   out_4054659643912203801[6] = 0;
   out_4054659643912203801[7] = 0;
   out_4054659643912203801[8] = 0;
   out_4054659643912203801[9] = 0;
   out_4054659643912203801[10] = 1;
   out_4054659643912203801[11] = 0;
   out_4054659643912203801[12] = 0;
   out_4054659643912203801[13] = 0;
   out_4054659643912203801[14] = 0;
   out_4054659643912203801[15] = 0;
   out_4054659643912203801[16] = 0;
   out_4054659643912203801[17] = 0;
   out_4054659643912203801[18] = 0;
   out_4054659643912203801[19] = 0;
   out_4054659643912203801[20] = 0;
   out_4054659643912203801[21] = 0;
   out_4054659643912203801[22] = 0;
   out_4054659643912203801[23] = 0;
   out_4054659643912203801[24] = 0;
   out_4054659643912203801[25] = 0;
   out_4054659643912203801[26] = 0;
   out_4054659643912203801[27] = 0;
   out_4054659643912203801[28] = 0;
   out_4054659643912203801[29] = 0;
   out_4054659643912203801[30] = 0;
   out_4054659643912203801[31] = 0;
   out_4054659643912203801[32] = 0;
   out_4054659643912203801[33] = 1;
   out_4054659643912203801[34] = 0;
   out_4054659643912203801[35] = 0;
   out_4054659643912203801[36] = 0;
   out_4054659643912203801[37] = 0;
   out_4054659643912203801[38] = 0;
   out_4054659643912203801[39] = 0;
   out_4054659643912203801[40] = 0;
   out_4054659643912203801[41] = 0;
   out_4054659643912203801[42] = 0;
   out_4054659643912203801[43] = 0;
   out_4054659643912203801[44] = 0;
   out_4054659643912203801[45] = 0;
   out_4054659643912203801[46] = 0;
   out_4054659643912203801[47] = 0;
   out_4054659643912203801[48] = 0;
   out_4054659643912203801[49] = 0;
   out_4054659643912203801[50] = 0;
   out_4054659643912203801[51] = 0;
   out_4054659643912203801[52] = 0;
   out_4054659643912203801[53] = 0;
   out_4054659643912203801[54] = 0;
   out_4054659643912203801[55] = 0;
   out_4054659643912203801[56] = 1;
   out_4054659643912203801[57] = 0;
   out_4054659643912203801[58] = 0;
   out_4054659643912203801[59] = 0;
   out_4054659643912203801[60] = 0;
   out_4054659643912203801[61] = 0;
   out_4054659643912203801[62] = 0;
   out_4054659643912203801[63] = 0;
   out_4054659643912203801[64] = 0;
   out_4054659643912203801[65] = 0;
}
void h_10(double *state, double *unused, double *out_5494962244777780694) {
   out_5494962244777780694[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_5494962244777780694[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_5494962244777780694[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_988134382099698306) {
   out_988134382099698306[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_988134382099698306[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_988134382099698306[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_988134382099698306[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_988134382099698306[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_988134382099698306[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_988134382099698306[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_988134382099698306[7] = 0;
   out_988134382099698306[8] = 0;
   out_988134382099698306[9] = 0;
   out_988134382099698306[10] = 0;
   out_988134382099698306[11] = 0;
   out_988134382099698306[12] = 0;
   out_988134382099698306[13] = 0;
   out_988134382099698306[14] = 0;
   out_988134382099698306[15] = 0;
   out_988134382099698306[16] = 1;
   out_988134382099698306[17] = 0;
   out_988134382099698306[18] = 0;
   out_988134382099698306[19] = 1;
   out_988134382099698306[20] = 0;
   out_988134382099698306[21] = 0;
   out_988134382099698306[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_988134382099698306[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_988134382099698306[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_988134382099698306[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_988134382099698306[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_988134382099698306[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_988134382099698306[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_988134382099698306[29] = 0;
   out_988134382099698306[30] = 0;
   out_988134382099698306[31] = 0;
   out_988134382099698306[32] = 0;
   out_988134382099698306[33] = 0;
   out_988134382099698306[34] = 0;
   out_988134382099698306[35] = 0;
   out_988134382099698306[36] = 0;
   out_988134382099698306[37] = 0;
   out_988134382099698306[38] = 0;
   out_988134382099698306[39] = 1;
   out_988134382099698306[40] = 0;
   out_988134382099698306[41] = 0;
   out_988134382099698306[42] = 1;
   out_988134382099698306[43] = 0;
   out_988134382099698306[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_988134382099698306[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_988134382099698306[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_988134382099698306[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_988134382099698306[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_988134382099698306[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_988134382099698306[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_988134382099698306[51] = 0;
   out_988134382099698306[52] = 0;
   out_988134382099698306[53] = 0;
   out_988134382099698306[54] = 0;
   out_988134382099698306[55] = 0;
   out_988134382099698306[56] = 0;
   out_988134382099698306[57] = 0;
   out_988134382099698306[58] = 0;
   out_988134382099698306[59] = 0;
   out_988134382099698306[60] = 0;
   out_988134382099698306[61] = 0;
   out_988134382099698306[62] = 1;
   out_988134382099698306[63] = 0;
   out_988134382099698306[64] = 0;
   out_988134382099698306[65] = 1;
}
void h_12(double *state, double *unused, double *out_2334630861097322167) {
   out_2334630861097322167[0] = state[0];
   out_2334630861097322167[1] = state[1];
   out_2334630861097322167[2] = state[2];
}
void H_12(double *state, double *unused, double *out_6322422171144689476) {
   out_6322422171144689476[0] = 1;
   out_6322422171144689476[1] = 0;
   out_6322422171144689476[2] = 0;
   out_6322422171144689476[3] = 0;
   out_6322422171144689476[4] = 0;
   out_6322422171144689476[5] = 0;
   out_6322422171144689476[6] = 0;
   out_6322422171144689476[7] = 0;
   out_6322422171144689476[8] = 0;
   out_6322422171144689476[9] = 0;
   out_6322422171144689476[10] = 0;
   out_6322422171144689476[11] = 0;
   out_6322422171144689476[12] = 0;
   out_6322422171144689476[13] = 0;
   out_6322422171144689476[14] = 0;
   out_6322422171144689476[15] = 0;
   out_6322422171144689476[16] = 0;
   out_6322422171144689476[17] = 0;
   out_6322422171144689476[18] = 0;
   out_6322422171144689476[19] = 0;
   out_6322422171144689476[20] = 0;
   out_6322422171144689476[21] = 0;
   out_6322422171144689476[22] = 0;
   out_6322422171144689476[23] = 1;
   out_6322422171144689476[24] = 0;
   out_6322422171144689476[25] = 0;
   out_6322422171144689476[26] = 0;
   out_6322422171144689476[27] = 0;
   out_6322422171144689476[28] = 0;
   out_6322422171144689476[29] = 0;
   out_6322422171144689476[30] = 0;
   out_6322422171144689476[31] = 0;
   out_6322422171144689476[32] = 0;
   out_6322422171144689476[33] = 0;
   out_6322422171144689476[34] = 0;
   out_6322422171144689476[35] = 0;
   out_6322422171144689476[36] = 0;
   out_6322422171144689476[37] = 0;
   out_6322422171144689476[38] = 0;
   out_6322422171144689476[39] = 0;
   out_6322422171144689476[40] = 0;
   out_6322422171144689476[41] = 0;
   out_6322422171144689476[42] = 0;
   out_6322422171144689476[43] = 0;
   out_6322422171144689476[44] = 0;
   out_6322422171144689476[45] = 0;
   out_6322422171144689476[46] = 1;
   out_6322422171144689476[47] = 0;
   out_6322422171144689476[48] = 0;
   out_6322422171144689476[49] = 0;
   out_6322422171144689476[50] = 0;
   out_6322422171144689476[51] = 0;
   out_6322422171144689476[52] = 0;
   out_6322422171144689476[53] = 0;
   out_6322422171144689476[54] = 0;
   out_6322422171144689476[55] = 0;
   out_6322422171144689476[56] = 0;
   out_6322422171144689476[57] = 0;
   out_6322422171144689476[58] = 0;
   out_6322422171144689476[59] = 0;
   out_6322422171144689476[60] = 0;
   out_6322422171144689476[61] = 0;
   out_6322422171144689476[62] = 0;
   out_6322422171144689476[63] = 0;
   out_6322422171144689476[64] = 0;
   out_6322422171144689476[65] = 0;
}
void h_35(double *state, double *unused, double *out_8812005347938789531) {
   out_8812005347938789531[0] = state[7];
   out_8812005347938789531[1] = state[8];
   out_8812005347938789531[2] = state[9];
}
void H_35(double *state, double *unused, double *out_3576859138819675767) {
   out_3576859138819675767[0] = 0;
   out_3576859138819675767[1] = 0;
   out_3576859138819675767[2] = 0;
   out_3576859138819675767[3] = 0;
   out_3576859138819675767[4] = 0;
   out_3576859138819675767[5] = 0;
   out_3576859138819675767[6] = 0;
   out_3576859138819675767[7] = 1;
   out_3576859138819675767[8] = 0;
   out_3576859138819675767[9] = 0;
   out_3576859138819675767[10] = 0;
   out_3576859138819675767[11] = 0;
   out_3576859138819675767[12] = 0;
   out_3576859138819675767[13] = 0;
   out_3576859138819675767[14] = 0;
   out_3576859138819675767[15] = 0;
   out_3576859138819675767[16] = 0;
   out_3576859138819675767[17] = 0;
   out_3576859138819675767[18] = 0;
   out_3576859138819675767[19] = 0;
   out_3576859138819675767[20] = 0;
   out_3576859138819675767[21] = 0;
   out_3576859138819675767[22] = 0;
   out_3576859138819675767[23] = 0;
   out_3576859138819675767[24] = 0;
   out_3576859138819675767[25] = 0;
   out_3576859138819675767[26] = 0;
   out_3576859138819675767[27] = 0;
   out_3576859138819675767[28] = 0;
   out_3576859138819675767[29] = 0;
   out_3576859138819675767[30] = 1;
   out_3576859138819675767[31] = 0;
   out_3576859138819675767[32] = 0;
   out_3576859138819675767[33] = 0;
   out_3576859138819675767[34] = 0;
   out_3576859138819675767[35] = 0;
   out_3576859138819675767[36] = 0;
   out_3576859138819675767[37] = 0;
   out_3576859138819675767[38] = 0;
   out_3576859138819675767[39] = 0;
   out_3576859138819675767[40] = 0;
   out_3576859138819675767[41] = 0;
   out_3576859138819675767[42] = 0;
   out_3576859138819675767[43] = 0;
   out_3576859138819675767[44] = 0;
   out_3576859138819675767[45] = 0;
   out_3576859138819675767[46] = 0;
   out_3576859138819675767[47] = 0;
   out_3576859138819675767[48] = 0;
   out_3576859138819675767[49] = 0;
   out_3576859138819675767[50] = 0;
   out_3576859138819675767[51] = 0;
   out_3576859138819675767[52] = 0;
   out_3576859138819675767[53] = 1;
   out_3576859138819675767[54] = 0;
   out_3576859138819675767[55] = 0;
   out_3576859138819675767[56] = 0;
   out_3576859138819675767[57] = 0;
   out_3576859138819675767[58] = 0;
   out_3576859138819675767[59] = 0;
   out_3576859138819675767[60] = 0;
   out_3576859138819675767[61] = 0;
   out_3576859138819675767[62] = 0;
   out_3576859138819675767[63] = 0;
   out_3576859138819675767[64] = 0;
   out_3576859138819675767[65] = 0;
}
void h_32(double *state, double *unused, double *out_5009017043479333218) {
   out_5009017043479333218[0] = state[3];
   out_5009017043479333218[1] = state[4];
   out_5009017043479333218[2] = state[5];
   out_5009017043479333218[3] = state[6];
}
void H_32(double *state, double *unused, double *out_6252828314233598651) {
   out_6252828314233598651[0] = 0;
   out_6252828314233598651[1] = 0;
   out_6252828314233598651[2] = 0;
   out_6252828314233598651[3] = 1;
   out_6252828314233598651[4] = 0;
   out_6252828314233598651[5] = 0;
   out_6252828314233598651[6] = 0;
   out_6252828314233598651[7] = 0;
   out_6252828314233598651[8] = 0;
   out_6252828314233598651[9] = 0;
   out_6252828314233598651[10] = 0;
   out_6252828314233598651[11] = 0;
   out_6252828314233598651[12] = 0;
   out_6252828314233598651[13] = 0;
   out_6252828314233598651[14] = 0;
   out_6252828314233598651[15] = 0;
   out_6252828314233598651[16] = 0;
   out_6252828314233598651[17] = 0;
   out_6252828314233598651[18] = 0;
   out_6252828314233598651[19] = 0;
   out_6252828314233598651[20] = 0;
   out_6252828314233598651[21] = 0;
   out_6252828314233598651[22] = 0;
   out_6252828314233598651[23] = 0;
   out_6252828314233598651[24] = 0;
   out_6252828314233598651[25] = 0;
   out_6252828314233598651[26] = 1;
   out_6252828314233598651[27] = 0;
   out_6252828314233598651[28] = 0;
   out_6252828314233598651[29] = 0;
   out_6252828314233598651[30] = 0;
   out_6252828314233598651[31] = 0;
   out_6252828314233598651[32] = 0;
   out_6252828314233598651[33] = 0;
   out_6252828314233598651[34] = 0;
   out_6252828314233598651[35] = 0;
   out_6252828314233598651[36] = 0;
   out_6252828314233598651[37] = 0;
   out_6252828314233598651[38] = 0;
   out_6252828314233598651[39] = 0;
   out_6252828314233598651[40] = 0;
   out_6252828314233598651[41] = 0;
   out_6252828314233598651[42] = 0;
   out_6252828314233598651[43] = 0;
   out_6252828314233598651[44] = 0;
   out_6252828314233598651[45] = 0;
   out_6252828314233598651[46] = 0;
   out_6252828314233598651[47] = 0;
   out_6252828314233598651[48] = 0;
   out_6252828314233598651[49] = 1;
   out_6252828314233598651[50] = 0;
   out_6252828314233598651[51] = 0;
   out_6252828314233598651[52] = 0;
   out_6252828314233598651[53] = 0;
   out_6252828314233598651[54] = 0;
   out_6252828314233598651[55] = 0;
   out_6252828314233598651[56] = 0;
   out_6252828314233598651[57] = 0;
   out_6252828314233598651[58] = 0;
   out_6252828314233598651[59] = 0;
   out_6252828314233598651[60] = 0;
   out_6252828314233598651[61] = 0;
   out_6252828314233598651[62] = 0;
   out_6252828314233598651[63] = 0;
   out_6252828314233598651[64] = 0;
   out_6252828314233598651[65] = 0;
   out_6252828314233598651[66] = 0;
   out_6252828314233598651[67] = 0;
   out_6252828314233598651[68] = 0;
   out_6252828314233598651[69] = 0;
   out_6252828314233598651[70] = 0;
   out_6252828314233598651[71] = 0;
   out_6252828314233598651[72] = 1;
   out_6252828314233598651[73] = 0;
   out_6252828314233598651[74] = 0;
   out_6252828314233598651[75] = 0;
   out_6252828314233598651[76] = 0;
   out_6252828314233598651[77] = 0;
   out_6252828314233598651[78] = 0;
   out_6252828314233598651[79] = 0;
   out_6252828314233598651[80] = 0;
   out_6252828314233598651[81] = 0;
   out_6252828314233598651[82] = 0;
   out_6252828314233598651[83] = 0;
   out_6252828314233598651[84] = 0;
   out_6252828314233598651[85] = 0;
   out_6252828314233598651[86] = 0;
   out_6252828314233598651[87] = 0;
}
void h_13(double *state, double *unused, double *out_4762743962227189082) {
   out_4762743962227189082[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_4762743962227189082[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_4762743962227189082[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_716872904616565711) {
   out_716872904616565711[0] = 0;
   out_716872904616565711[1] = 0;
   out_716872904616565711[2] = 0;
   out_716872904616565711[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_716872904616565711[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_716872904616565711[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_716872904616565711[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_716872904616565711[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_716872904616565711[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_716872904616565711[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_716872904616565711[10] = 0;
   out_716872904616565711[11] = 0;
   out_716872904616565711[12] = 0;
   out_716872904616565711[13] = 0;
   out_716872904616565711[14] = 0;
   out_716872904616565711[15] = 0;
   out_716872904616565711[16] = 0;
   out_716872904616565711[17] = 0;
   out_716872904616565711[18] = 0;
   out_716872904616565711[19] = 0;
   out_716872904616565711[20] = 0;
   out_716872904616565711[21] = 0;
   out_716872904616565711[22] = 0;
   out_716872904616565711[23] = 0;
   out_716872904616565711[24] = 0;
   out_716872904616565711[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_716872904616565711[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_716872904616565711[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_716872904616565711[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_716872904616565711[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_716872904616565711[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_716872904616565711[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_716872904616565711[32] = 0;
   out_716872904616565711[33] = 0;
   out_716872904616565711[34] = 0;
   out_716872904616565711[35] = 0;
   out_716872904616565711[36] = 0;
   out_716872904616565711[37] = 0;
   out_716872904616565711[38] = 0;
   out_716872904616565711[39] = 0;
   out_716872904616565711[40] = 0;
   out_716872904616565711[41] = 0;
   out_716872904616565711[42] = 0;
   out_716872904616565711[43] = 0;
   out_716872904616565711[44] = 0;
   out_716872904616565711[45] = 0;
   out_716872904616565711[46] = 0;
   out_716872904616565711[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_716872904616565711[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_716872904616565711[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_716872904616565711[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_716872904616565711[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_716872904616565711[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_716872904616565711[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_716872904616565711[54] = 0;
   out_716872904616565711[55] = 0;
   out_716872904616565711[56] = 0;
   out_716872904616565711[57] = 0;
   out_716872904616565711[58] = 0;
   out_716872904616565711[59] = 0;
   out_716872904616565711[60] = 0;
   out_716872904616565711[61] = 0;
   out_716872904616565711[62] = 0;
   out_716872904616565711[63] = 0;
   out_716872904616565711[64] = 0;
   out_716872904616565711[65] = 0;
}
void h_14(double *state, double *unused, double *out_9081503026275750675) {
   out_9081503026275750675[0] = state[10];
   out_9081503026275750675[1] = state[11];
   out_9081503026275750675[2] = state[12];
}
void H_14(double *state, double *unused, double *out_4054659643912203801) {
   out_4054659643912203801[0] = 0;
   out_4054659643912203801[1] = 0;
   out_4054659643912203801[2] = 0;
   out_4054659643912203801[3] = 0;
   out_4054659643912203801[4] = 0;
   out_4054659643912203801[5] = 0;
   out_4054659643912203801[6] = 0;
   out_4054659643912203801[7] = 0;
   out_4054659643912203801[8] = 0;
   out_4054659643912203801[9] = 0;
   out_4054659643912203801[10] = 1;
   out_4054659643912203801[11] = 0;
   out_4054659643912203801[12] = 0;
   out_4054659643912203801[13] = 0;
   out_4054659643912203801[14] = 0;
   out_4054659643912203801[15] = 0;
   out_4054659643912203801[16] = 0;
   out_4054659643912203801[17] = 0;
   out_4054659643912203801[18] = 0;
   out_4054659643912203801[19] = 0;
   out_4054659643912203801[20] = 0;
   out_4054659643912203801[21] = 0;
   out_4054659643912203801[22] = 0;
   out_4054659643912203801[23] = 0;
   out_4054659643912203801[24] = 0;
   out_4054659643912203801[25] = 0;
   out_4054659643912203801[26] = 0;
   out_4054659643912203801[27] = 0;
   out_4054659643912203801[28] = 0;
   out_4054659643912203801[29] = 0;
   out_4054659643912203801[30] = 0;
   out_4054659643912203801[31] = 0;
   out_4054659643912203801[32] = 0;
   out_4054659643912203801[33] = 1;
   out_4054659643912203801[34] = 0;
   out_4054659643912203801[35] = 0;
   out_4054659643912203801[36] = 0;
   out_4054659643912203801[37] = 0;
   out_4054659643912203801[38] = 0;
   out_4054659643912203801[39] = 0;
   out_4054659643912203801[40] = 0;
   out_4054659643912203801[41] = 0;
   out_4054659643912203801[42] = 0;
   out_4054659643912203801[43] = 0;
   out_4054659643912203801[44] = 0;
   out_4054659643912203801[45] = 0;
   out_4054659643912203801[46] = 0;
   out_4054659643912203801[47] = 0;
   out_4054659643912203801[48] = 0;
   out_4054659643912203801[49] = 0;
   out_4054659643912203801[50] = 0;
   out_4054659643912203801[51] = 0;
   out_4054659643912203801[52] = 0;
   out_4054659643912203801[53] = 0;
   out_4054659643912203801[54] = 0;
   out_4054659643912203801[55] = 0;
   out_4054659643912203801[56] = 1;
   out_4054659643912203801[57] = 0;
   out_4054659643912203801[58] = 0;
   out_4054659643912203801[59] = 0;
   out_4054659643912203801[60] = 0;
   out_4054659643912203801[61] = 0;
   out_4054659643912203801[62] = 0;
   out_4054659643912203801[63] = 0;
   out_4054659643912203801[64] = 0;
   out_4054659643912203801[65] = 0;
}
void h_33(double *state, double *unused, double *out_1834506484088595531) {
   out_1834506484088595531[0] = state[16];
   out_1834506484088595531[1] = state[17];
   out_1834506484088595531[2] = state[18];
}
void H_33(double *state, double *unused, double *out_4824659517165186291) {
   out_4824659517165186291[0] = 0;
   out_4824659517165186291[1] = 0;
   out_4824659517165186291[2] = 0;
   out_4824659517165186291[3] = 0;
   out_4824659517165186291[4] = 0;
   out_4824659517165186291[5] = 0;
   out_4824659517165186291[6] = 0;
   out_4824659517165186291[7] = 0;
   out_4824659517165186291[8] = 0;
   out_4824659517165186291[9] = 0;
   out_4824659517165186291[10] = 0;
   out_4824659517165186291[11] = 0;
   out_4824659517165186291[12] = 0;
   out_4824659517165186291[13] = 0;
   out_4824659517165186291[14] = 0;
   out_4824659517165186291[15] = 0;
   out_4824659517165186291[16] = 1;
   out_4824659517165186291[17] = 0;
   out_4824659517165186291[18] = 0;
   out_4824659517165186291[19] = 0;
   out_4824659517165186291[20] = 0;
   out_4824659517165186291[21] = 0;
   out_4824659517165186291[22] = 0;
   out_4824659517165186291[23] = 0;
   out_4824659517165186291[24] = 0;
   out_4824659517165186291[25] = 0;
   out_4824659517165186291[26] = 0;
   out_4824659517165186291[27] = 0;
   out_4824659517165186291[28] = 0;
   out_4824659517165186291[29] = 0;
   out_4824659517165186291[30] = 0;
   out_4824659517165186291[31] = 0;
   out_4824659517165186291[32] = 0;
   out_4824659517165186291[33] = 0;
   out_4824659517165186291[34] = 0;
   out_4824659517165186291[35] = 0;
   out_4824659517165186291[36] = 0;
   out_4824659517165186291[37] = 0;
   out_4824659517165186291[38] = 0;
   out_4824659517165186291[39] = 1;
   out_4824659517165186291[40] = 0;
   out_4824659517165186291[41] = 0;
   out_4824659517165186291[42] = 0;
   out_4824659517165186291[43] = 0;
   out_4824659517165186291[44] = 0;
   out_4824659517165186291[45] = 0;
   out_4824659517165186291[46] = 0;
   out_4824659517165186291[47] = 0;
   out_4824659517165186291[48] = 0;
   out_4824659517165186291[49] = 0;
   out_4824659517165186291[50] = 0;
   out_4824659517165186291[51] = 0;
   out_4824659517165186291[52] = 0;
   out_4824659517165186291[53] = 0;
   out_4824659517165186291[54] = 0;
   out_4824659517165186291[55] = 0;
   out_4824659517165186291[56] = 0;
   out_4824659517165186291[57] = 0;
   out_4824659517165186291[58] = 0;
   out_4824659517165186291[59] = 0;
   out_4824659517165186291[60] = 0;
   out_4824659517165186291[61] = 0;
   out_4824659517165186291[62] = 1;
   out_4824659517165186291[63] = 0;
   out_4824659517165186291[64] = 0;
   out_4824659517165186291[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_197059200494027966) {
  H(in_vec, out_197059200494027966);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_4389981286306835332) {
  err_fun(nom_x, delta_x, out_4389981286306835332);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_2871076421796127612) {
  inv_err_fun(nom_x, true_x, out_2871076421796127612);
}
void live_H_mod_fun(double *state, double *out_5155217794973921661) {
  H_mod_fun(state, out_5155217794973921661);
}
void live_f_fun(double *state, double dt, double *out_5503960962388644187) {
  f_fun(state,  dt, out_5503960962388644187);
}
void live_F_fun(double *state, double dt, double *out_2076298069187341018) {
  F_fun(state,  dt, out_2076298069187341018);
}
void live_h_4(double *state, double *unused, double *out_6715684721504435251) {
  h_4(state, unused, out_6715684721504435251);
}
void live_H_4(double *state, double *unused, double *out_7104865494532900345) {
  H_4(state, unused, out_7104865494532900345);
}
void live_h_9(double *state, double *unused, double *out_9081503026275750675) {
  h_9(state, unused, out_9081503026275750675);
}
void live_H_9(double *state, double *unused, double *out_4054659643912203801) {
  H_9(state, unused, out_4054659643912203801);
}
void live_h_10(double *state, double *unused, double *out_5494962244777780694) {
  h_10(state, unused, out_5494962244777780694);
}
void live_H_10(double *state, double *unused, double *out_988134382099698306) {
  H_10(state, unused, out_988134382099698306);
}
void live_h_12(double *state, double *unused, double *out_2334630861097322167) {
  h_12(state, unused, out_2334630861097322167);
}
void live_H_12(double *state, double *unused, double *out_6322422171144689476) {
  H_12(state, unused, out_6322422171144689476);
}
void live_h_35(double *state, double *unused, double *out_8812005347938789531) {
  h_35(state, unused, out_8812005347938789531);
}
void live_H_35(double *state, double *unused, double *out_3576859138819675767) {
  H_35(state, unused, out_3576859138819675767);
}
void live_h_32(double *state, double *unused, double *out_5009017043479333218) {
  h_32(state, unused, out_5009017043479333218);
}
void live_H_32(double *state, double *unused, double *out_6252828314233598651) {
  H_32(state, unused, out_6252828314233598651);
}
void live_h_13(double *state, double *unused, double *out_4762743962227189082) {
  h_13(state, unused, out_4762743962227189082);
}
void live_H_13(double *state, double *unused, double *out_716872904616565711) {
  H_13(state, unused, out_716872904616565711);
}
void live_h_14(double *state, double *unused, double *out_9081503026275750675) {
  h_14(state, unused, out_9081503026275750675);
}
void live_H_14(double *state, double *unused, double *out_4054659643912203801) {
  H_14(state, unused, out_4054659643912203801);
}
void live_h_33(double *state, double *unused, double *out_1834506484088595531) {
  h_33(state, unused, out_1834506484088595531);
}
void live_H_33(double *state, double *unused, double *out_4824659517165186291) {
  H_33(state, unused, out_4824659517165186291);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
